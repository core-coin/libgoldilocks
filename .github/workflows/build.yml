name: libgoldilocks pipeline
on: push
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, raspbian-private, macos-private, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build Linux
      if: ${{ matrix.platform == 'ubuntu-latest' || matrix.platform == 'raspbian-private'}}
      run: |
        mkdir -p src/.libs
        docker build . -t libgoldilocks:${{matrix.platform}}
        docker create -it --name dummy libgoldilocks:${{matrix.platform}} bash
        docker cp dummy:/usr/local/bin/libgoldilocks.a src/.libs/libgoldilocks.a
        docker rm -f dummy
    - name: Build Mac
      if: ${{ matrix.platform == 'macos-private' }}
      run: |
        pacman -S base-devel
        autoreconf --install && ./configure && make all
    - name: Setup Windows
      if: ${{ matrix.platform == 'windows-latest' }}
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64
    - name: Build Windows
      if: ${{ matrix.platform == 'windows-latest' }}
      run:
        autoreconf --install && ./configure && make all
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: libgoldilocks-${{matrix.platform}}
        path: src/.libs/libgoldilocks.a
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Linux artifact
      uses: actions/download-artifact@v2
      with:
        name: libgoldilocks-ubuntu-latest
        path: libgoldilocks-ubuntu-latest
    - name: Download RPi artifact
      uses: actions/download-artifact@v2
      with:
        name: libgoldilocks-raspbian-private
        path: libgoldilocks-raspbian-private
    - name: Download Mac artifact
      uses: actions/download-artifact@v2
      with:
        name: libgoldilocks-macos-private
        path: libgoldilocks-macos-private
    - name: Create zip
      run: |
        zip -r libgoldilocks libgoldilocks-*
    - name: Fetch tag
      run: |
        echo "branch=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - name: Bump version
      id: version_bump
      uses: anothrNick/github-tag-action@1.13.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: "patch"
        RELEASE_BRANCHES: ${{ env.branch }}
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_bump.outputs.tag }}
        release_name: Release libgoldilocks ${{ steps.version_bump.outputs.tag }}
        draft: false
        prerelease: false
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: libgoldilocks.zip
        asset_name: libgoldilocks.zip
        asset_content_type: application/zip
